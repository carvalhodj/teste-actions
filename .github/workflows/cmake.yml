name: CMake

on:
  push:
    branches: [ main ]
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [ main ]
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"

env: 
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  BUILD_TYPE: Release

jobs: 
  build: 
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
#     - uses: ashutoshvarma/setup-ninja@master
#       with:
#           # ninja version to download. Default: 1.10.0
#           version: 1.10.0

#     - name: Configure CMake
#       # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
#       # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
#       run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: | 
        sudo apt install ninja-build
        cmake -S ${{github.workspace}}/src -B ${{github.workspace}}/build -GNinja
    
    - name: Compile
      run: |
        cd ${{github.workspace}}/build        
        ninja
        touch teste.zip
        zip release.zip hello_actions
    
    - name: Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ env.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: ${{github.workspace}}/build/release.zip
#     - name: Test
#       working-directory: ${{github.workspace}}/build
#       # Execute tests defined by the CMake configuration.  
#       # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#       run: ctest -C ${{env.BUILD_TYPE}}

#   deploy-dev:
#     runs-on: ubuntu-latest
#     environment:
#       name: dev
#       url: www.google.com
#     needs: build
#     steps: 
#       - uses: actions/checkout@v3
#       - name: Teste dev
#         run: |
#           cd ${{github.workspace}}/build        
#           ninja
      
